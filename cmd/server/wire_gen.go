// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"bobshop/internal/modules/auth/application"
	"bobshop/internal/modules/auth/delivery/http"
	infrastructure2 "bobshop/internal/modules/auth/infrastructure"
	application2 "bobshop/internal/modules/product/application"
	http2 "bobshop/internal/modules/product/delivery/http"
	infrastructure3 "bobshop/internal/modules/product/infrastructure"
	"bobshop/internal/platform/config"
	"bobshop/internal/platform/database"
	"bobshop/internal/platform/infrastructure"
	"bobshop/internal/platform/middleware"
	"bobshop/internal/platform/web"
)

// Injectors from wire.go:

func buildApp(cfg *config.Config) (*AppServer, func(), error) {
	serverConfig := &cfg.Server
	engine := provideGinEngine(serverConfig)
	jwtConfig := &cfg.JWT
	jwtTokenizer := infrastructure.NewJwtTokenizer(jwtConfig)
	handlerFunc := middleware.AuthMiddleware(jwtTokenizer)
	databaseConfig := &cfg.Database
	client, cleanup, err := database.ConnectMongo(databaseConfig)
	if err != nil {
		return nil, nil, err
	}
	mongoDatabase := database.ProvideMongoDatabase(client, databaseConfig)
	mongoAuthRepository := infrastructure2.NewMongoAuthRepository(mongoDatabase)
	authService := application.NewAuthService(mongoAuthRepository, jwtTokenizer)
	cookieConfig := &cfg.Cookie
	cookieManager := web.NewCookieManager(cookieConfig)
	authHandler := http.NewAuthHandler(authService, cookieManager)
	mongoProductRepository := infrastructure3.NewMongoProductRepository(mongoDatabase)
	redisConfig := &cfg.Redis
	redisClient, cleanup2, err := database.ConnectRedis(redisConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	redisCache := infrastructure3.NewRedisCache(redisClient)
	productService := application2.NewProductService(mongoProductRepository, redisCache)
	productHandler := http2.NewProductHandler(productService)
	appServer := initializeServer(engine, handlerFunc, authHandler, productHandler)
	return appServer, func() {
		cleanup2()
		cleanup()
	}, nil
}
