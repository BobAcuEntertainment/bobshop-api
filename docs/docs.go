// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/agent/v1/coins/configs": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "List Configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CoinConfigStrategyDto"
                            }
                        }
                    }
                }
            }
        },
        "/agent/v1/coins/configs/{config_id}/server-status": {
            "put": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Update Server Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config_id",
                        "name": "config_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CoinConfigServerInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/agent/v1/coins/orders": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Create Order",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CoinOrderAlertData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/v1/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.AuthChangePasswordData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/v1/flush-cache": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Flush Cache",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.AuthLoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.AuthTokenDto"
                        }
                    }
                }
            }
        },
        "/auth/v1/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/v1/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get Me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.AuthSessionDto"
                        }
                    }
                }
            }
        },
        "/auth/v1/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.AuthRefreshTokenData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.AuthTokenDto"
                        }
                    }
                }
            }
        },
        "/cms/v1/auditlogs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Audit Logs",
                "parameters": [
                    {
                        "type": "string",
                        "name": "domain_id",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.AuditLogCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/clients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Clients",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ClientCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create Client",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.ClientCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.ClientCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/clients/{client_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Delete Client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "client_id",
                        "name": "client_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.ClientCmsDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/configs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Configs",
                "parameters": [
                    {
                        "enum": [
                            "enable",
                            "disable"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DataStatusEnable",
                            "DataStatusDisable"
                        ],
                        "name": "data_status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CoinConfigCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create Config",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CoinConfigCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CoinConfigCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/configs/{config_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Update Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config_id",
                        "name": "config_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CoinConfigCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CoinConfigCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Exchanges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/enum.Exchange"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/balances": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Balances",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "spot",
                            "margin"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "MarketTypeSpot",
                            "MarketTypeMargin"
                        ],
                        "name": "market_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "trader_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.Balance"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/currencies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Currencies",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.Currency"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/markets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Markets",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "spot",
                            "margin"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "MarketTypeSpot",
                            "MarketTypeMargin"
                        ],
                        "name": "market_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.Market"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/ohlcvs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List OHLCVs",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "timeframe",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.OHLCV"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/orderbook": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Get OrderBook",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/coin.OrderBook"
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Orders",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "trader_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.Order"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/symbols": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Symbols",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/tickers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Tickers",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    },
                    {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "symbols",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.Ticker"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/timeframes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Timeframes",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/exchanges/{exchange_id}/trades": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Trades",
                "parameters": [
                    {
                        "enum": [
                            "binance",
                            "bitget",
                            "bybit",
                            "cex",
                            "gate",
                            "mexc",
                            "probit"
                        ],
                        "type": "string",
                        "description": "exchange_id",
                        "name": "exchange_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "sandbox",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coin.Trade"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Orders",
                "parameters": [
                    {
                        "type": "string",
                        "name": "config_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2006-01-02",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2006-01-02",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "open",
                            "closed"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "OrderStatusOpen",
                            "OrderStatusClosed"
                        ],
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "trader_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CoinOrderCmsDto"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Reports",
                "parameters": [
                    {
                        "type": "string",
                        "name": "config_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2006-01-02",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2006-01-02",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "trader_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CoinOrderCmsReportDto"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/strategies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Strategies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.StrategyCmsDto"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/coins/traders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Traders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TraderBaseDto"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Roles",
                "parameters": [
                    {
                        "enum": [
                            "enable",
                            "disable"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DataStatusEnable",
                            "DataStatusDisable"
                        ],
                        "name": "data_status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.RoleCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create Role",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.RoleCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.RoleCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/roles/{role_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Update Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role_id",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.RoleCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.RoleCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/strategies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Strategies",
                "parameters": [
                    {
                        "enum": [
                            "enable",
                            "disable"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DataStatusEnable",
                            "DataStatusDisable"
                        ],
                        "name": "data_status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.StrategyCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create Strategy",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.StrategyCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.StrategyCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/strategies/{strategy_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Update Strategy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "strategy_id",
                        "name": "strategy_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.StrategyCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.StrategyCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/tenants": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Tenants",
                "parameters": [
                    {
                        "enum": [
                            "enable",
                            "disable"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DataStatusEnable",
                            "DataStatusDisable"
                        ],
                        "name": "data_status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TenantCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create Tenant",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.TenantCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TenantCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/tenants/{tenant_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Update Tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tenant_id",
                        "name": "tenant_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.TenantCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TenantCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/tenants/{tenant_id}/reset-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Reset Password For Tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tenant_id",
                        "name": "tenant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TenantCmsDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/traders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Traders",
                "parameters": [
                    {
                        "enum": [
                            "enable",
                            "disable"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DataStatusEnable",
                            "DataStatusDisable"
                        ],
                        "name": "data_status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TraderCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create Trader",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.TraderCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TraderCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/traders/{trader_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Update Trader",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trader_id",
                        "name": "trader_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.TraderCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TraderCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Users",
                "parameters": [
                    {
                        "enum": [
                            "enable",
                            "disable"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "DataStatusEnable",
                            "DataStatusDisable"
                        ],
                        "name": "data_status",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at.desc",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.UserCmsDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.UserCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/users/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "List Roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.RoleBaseDto"
                            }
                        }
                    }
                }
            }
        },
        "/cms/v1/users/{user_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.UserCmsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserCmsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/cms/v1/users/{user_id}/reset-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Cms"
                ],
                "summary": "Reset Password For User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserCmsDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/rest/v1/metas": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Rest"
                ],
                "summary": "Get Metas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ecode.Error"
                        }
                    }
                }
            }
        },
        "/storage/v1/images": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Upload Image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "files",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/storage/v1/images/{filename}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Download Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/storage/v1/videos": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Upload Video",
                "parameters": [
                    {
                        "type": "file",
                        "description": "files",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/storage/v1/videos/{filename}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Download Video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/test/v1": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Test"
                ],
                "summary": "Test",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.AuthLoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.AuthLoginData"
                        }
                    }
                }
            }
        },
        "/webhook/v1": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "tags": [
                    "Webhook"
                ],
                "summary": "Webhook",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.M"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.M"
                        }
                    }
                }
            }
        },
        "/websocket/v1": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Websocket"
                ],
                "summary": "Websocket",
                "responses": {
                    "101": {
                        "description": "Switching Protocols"
                    }
                }
            }
        }
    },
    "definitions": {
        "coin.Balance": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "free": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "used": {
                    "type": "number"
                }
            }
        },
        "coin.Currency": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "string"
                },
                "currency_limits": {
                    "$ref": "#/definitions/coin.CurrencyLimits"
                },
                "deposit": {
                    "type": "boolean"
                },
                "fee": {
                    "type": "number"
                },
                "margin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/coin.Network"
                    }
                },
                "numeric_id": {
                    "type": "integer"
                },
                "precision": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "withdraw": {
                    "type": "boolean"
                }
            }
        },
        "coin.CurrencyLimits": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/coin.MinMax"
                },
                "withdraw": {
                    "$ref": "#/definitions/coin.MinMax"
                }
            }
        },
        "coin.Fee": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "rate": {
                    "type": "number"
                }
            }
        },
        "coin.Market": {
            "type": "object",
            "properties": {
                "margin": {
                    "type": "boolean"
                },
                "market_id": {
                    "type": "string"
                },
                "spot": {
                    "type": "boolean"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "description": "UppercaseId    string    ` + "`" + `json:\"uppercase_id\"` + "`" + `\nLowercaseId    string    ` + "`" + `json:\"lowercase_id\"` + "`" + `\nBaseCurrency   string    ` + "`" + `json:\"base_currency\"` + "`" + `\nQuoteCurrency  string    ` + "`" + `json:\"quote_currency\"` + "`" + `\nBaseId         string    ` + "`" + `json:\"base_id\"` + "`" + `\nQuoteId        string    ` + "`" + `json:\"quote_id\"` + "`" + `\nActive         bool      ` + "`" + `json:\"active\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "coin.MinMax": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            }
        },
        "coin.Network": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "currency_limits": {
                    "$ref": "#/definitions/coin.CurrencyLimits"
                },
                "deposit": {
                    "type": "boolean"
                },
                "fee": {
                    "type": "number"
                },
                "network_id": {
                    "type": "string"
                },
                "precision": {
                    "type": "number"
                },
                "withdraw": {
                    "type": "boolean"
                }
            }
        },
        "coin.OHLCV": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "volume": {
                    "type": "number"
                }
            }
        },
        "coin.Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "average": {
                    "type": "number"
                },
                "client_order_id": {
                    "type": "string"
                },
                "cost": {
                    "type": "number"
                },
                "datetime": {
                    "type": "string"
                },
                "fee": {
                    "$ref": "#/definitions/coin.Fee"
                },
                "filled": {
                    "type": "number"
                },
                "last_trade_timestamp": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "post_only": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "reduce_only": {
                    "type": "boolean"
                },
                "remaining": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "stop_loss_price": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "take_profit_price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "trades": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/coin.Trade"
                    }
                },
                "trigger_price": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "coin.OrderBook": {
            "type": "object",
            "properties": {
                "asks": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "bids": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "datetime": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "coin.Ticker": {
            "type": "object",
            "properties": {
                "ask": {
                    "type": "number"
                },
                "ask_volume": {
                    "type": "number"
                },
                "average": {
                    "type": "number"
                },
                "base_volume": {
                    "type": "number"
                },
                "bid": {
                    "type": "number"
                },
                "bid_volume": {
                    "type": "number"
                },
                "change": {
                    "type": "number"
                },
                "close": {
                    "type": "number"
                },
                "datetime": {
                    "type": "string"
                },
                "high": {
                    "type": "number"
                },
                "last": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "percentage": {
                    "type": "number"
                },
                "previous_close": {
                    "type": "number"
                },
                "quote_volume": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "vwap": {
                    "type": "number"
                }
            }
        },
        "coin.Trade": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "cost": {
                    "type": "number"
                },
                "datetime": {
                    "type": "string"
                },
                "fee": {
                    "$ref": "#/definitions/coin.Fee"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "taker_or_maker": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "db.AuditLogCmsDto": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/enum.DataAction"
                },
                "data": {
                    "$ref": "#/definitions/db.M"
                },
                "domain_id": {
                    "type": "string",
                    "example": "654db9eca1f1b1bdbf3d4617"
                },
                "log_id": {
                    "type": "string",
                    "example": "812db9eca1f1b1bdbf3d4617"
                },
                "method": {
                    "type": "string",
                    "example": "GET"
                },
                "name": {
                    "type": "string",
                    "example": "Role"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                },
                "url": {
                    "type": "string",
                    "example": "/v1/cms/roles"
                }
            }
        },
        "db.AuthChangePasswordData": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "db.AuthLoginData": {
            "type": "object",
            "required": [
                "keycode",
                "password",
                "username"
            ],
            "properties": {
                "keycode": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.AuthRefreshTokenData": {
            "type": "object",
            "required": [
                "keycode",
                "refresh_token",
                "username"
            ],
            "properties": {
                "keycode": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.AuthSessionDto": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_root": {
                    "type": "boolean"
                },
                "is_tenant": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.Permission"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "timezone": {
                    "$ref": "#/definitions/tz.Timezone"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.AuthTokenDto": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "db.ClientCmsData": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Aloha"
                }
            }
        },
        "db.ClientCmsDto": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string",
                    "example": "ogy64Ji1E4VY0S8b99oGDlDCRk5ZO3"
                },
                "client_secret": {
                    "type": "string",
                    "example": "oSAa14Q1Ne6iSqVLs4nfG7p12K6cyv67PyV3L509"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "secure_key": {
                    "type": "string",
                    "example": "QX9f276HW4fyL38Jto0pi9WVa40yLRpW0jsKN033"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "db.CoinConfigAttributeInfo": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "db.CoinConfigCmsData": {
            "type": "object",
            "required": [
                "attributes",
                "data_status",
                "description",
                "exchange",
                "margin_mode",
                "market_type",
                "name",
                "strategy_id",
                "symbols",
                "trader_ids"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CoinConfigAttributeInfo"
                    }
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "description": {
                    "type": "string"
                },
                "exchange": {
                    "$ref": "#/definitions/enum.Exchange"
                },
                "margin_mode": {
                    "$ref": "#/definitions/enum.MarginMode"
                },
                "market_type": {
                    "$ref": "#/definitions/enum.MarketType"
                },
                "name": {
                    "type": "string"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "strategy_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4627"
                },
                "symbols": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "BTC/USDT"
                    ]
                },
                "trader_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "671db9eca1f1b1bdbf3d4611"
                    ]
                }
            }
        },
        "db.CoinConfigCmsDto": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CoinConfigAttributeInfo"
                    }
                },
                "config_id": {
                    "type": "string",
                    "example": "671dfc49f06ba89b1821cc5a"
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "description": {
                    "type": "string"
                },
                "exchange": {
                    "$ref": "#/definitions/enum.Exchange"
                },
                "margin_mode": {
                    "$ref": "#/definitions/enum.MarginMode"
                },
                "market_type": {
                    "$ref": "#/definitions/enum.MarketType"
                },
                "name": {
                    "type": "string"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "server": {
                    "$ref": "#/definitions/db.CoinConfigServerInfo"
                },
                "strategy_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4627"
                },
                "symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "BTC/USDT"
                    ]
                },
                "trader_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "671db9eca1f1b1bdbf3d4611"
                    ]
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "db.CoinConfigCredentialInfo": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "trader_id": {
                    "type": "string"
                }
            }
        },
        "db.CoinConfigServerInfo": {
            "type": "object",
            "required": [
                "message",
                "status"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enum.ServerStatus"
                }
            }
        },
        "db.CoinConfigStrategyDto": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "config_id": {
                    "type": "string"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CoinConfigCredentialInfo"
                    }
                },
                "exchange": {
                    "$ref": "#/definitions/enum.Exchange"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "strategy_id": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                }
            }
        },
        "db.CoinOrderAlertData": {
            "type": "object",
            "required": [
                "config_id",
                "order",
                "tenant_id",
                "trader_id"
            ],
            "properties": {
                "config_id": {
                    "type": "string"
                },
                "order": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "tenant_id": {
                    "type": "string"
                },
                "trader_id": {
                    "type": "string"
                }
            }
        },
        "db.CoinOrderCmsDto": {
            "type": "object",
            "properties": {
                "config_id": {
                    "type": "string",
                    "example": "671dfc49f06ba89b1821cc5a"
                },
                "order": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "order_id": {
                    "type": "string",
                    "example": "671dfc49f06ba89b1821cc5a"
                },
                "trader_id": {
                    "type": "string",
                    "example": "671dfc49f06ba89b1821cc5a"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "db.CoinOrderCmsReportChartInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "total_fee": {
                    "type": "number"
                },
                "total_order": {
                    "type": "number"
                },
                "total_token": {
                    "type": "number"
                },
                "total_volume": {
                    "type": "number"
                }
            }
        },
        "db.CoinOrderCmsReportDto": {
            "type": "object",
            "properties": {
                "charts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CoinOrderCmsReportChartInfo"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/db.CoinOrderCmsReportSummaryInfo"
                },
                "summary_24h": {
                    "$ref": "#/definitions/db.CoinOrderCmsReportSummary24HInfo"
                }
            }
        },
        "db.CoinOrderCmsReportSummary24HInfo": {
            "type": "object",
            "properties": {
                "total_fee": {
                    "type": "number"
                },
                "total_order": {
                    "type": "number"
                },
                "total_token": {
                    "type": "number"
                },
                "total_token_exchange": {
                    "type": "number"
                },
                "total_volume": {
                    "type": "number"
                },
                "total_volume_exchange": {
                    "type": "number"
                }
            }
        },
        "db.CoinOrderCmsReportSummaryInfo": {
            "type": "object",
            "properties": {
                "total_fee": {
                    "type": "number"
                },
                "total_order": {
                    "type": "number"
                },
                "total_token": {
                    "type": "number"
                },
                "total_volume": {
                    "type": "number"
                }
            }
        },
        "db.M": {
            "type": "object",
            "additionalProperties": {}
        },
        "db.RoleBaseDto": {
            "type": "object",
            "properties": {
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "role_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4617"
                }
            }
        },
        "db.RoleCmsData": {
            "type": "object",
            "required": [
                "data_status",
                "name",
                "permissions"
            ],
            "properties": {
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "permissions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/enum.Permission"
                    }
                }
            }
        },
        "db.RoleCmsDto": {
            "type": "object",
            "properties": {
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/enum.Permission"
                    }
                },
                "role_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4617"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "db.StrategyAttributeInfo": {
            "type": "object",
            "required": [
                "key",
                "title",
                "type"
            ],
            "properties": {
                "default": {},
                "key": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "values": {}
            }
        },
        "db.StrategyCmsData": {
            "type": "object",
            "required": [
                "attributes",
                "data_status",
                "description",
                "filename",
                "name"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.StrategyAttributeInfo"
                    }
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "filename": {
                    "type": "string",
                    "example": "strategy_1.py"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                }
            }
        },
        "db.StrategyCmsDto": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.StrategyAttributeInfo"
                    }
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "filename": {
                    "type": "string",
                    "example": "strategy_1.py"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "strategy_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4627"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "db.TenantCmsData": {
            "type": "object",
            "required": [
                "address",
                "data_status",
                "email",
                "keycode",
                "name",
                "phone",
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Aloha City"
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "email": {
                    "type": "string",
                    "example": "aloha@email.com"
                },
                "keycode": {
                    "type": "string",
                    "example": "aloha"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "phone": {
                    "type": "string",
                    "example": "0973123456"
                },
                "username": {
                    "type": "string",
                    "example": "aloha"
                }
            }
        },
        "db.TenantCmsDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Aloha City"
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "email": {
                    "type": "string",
                    "example": "aloha@email.com"
                },
                "keycode": {
                    "type": "string",
                    "example": "aloha"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "phone": {
                    "type": "string",
                    "example": "0973123456"
                },
                "tenant_id": {
                    "type": "string",
                    "example": "671dfc49f06ba89b1811cc5a"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                },
                "username": {
                    "type": "string",
                    "example": "aloha"
                }
            }
        },
        "db.TraderBaseDto": {
            "type": "object",
            "properties": {
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "exchange": {
                    "$ref": "#/definitions/enum.Exchange"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "trader_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4611"
                }
            }
        },
        "db.TraderCmsData": {
            "type": "object",
            "required": [
                "api_key",
                "data_status",
                "exchange",
                "name",
                "secret"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "exchange": {
                    "$ref": "#/definitions/enum.Exchange"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "password": {
                    "type": "string"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "db.TraderCmsDto": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string",
                    "example": "api_key"
                },
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "exchange": {
                    "$ref": "#/definitions/enum.Exchange"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "secret": {
                    "type": "string",
                    "example": "secret"
                },
                "trader_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4611"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                }
            }
        },
        "db.UserCmsData": {
            "type": "object",
            "required": [
                "data_status",
                "email",
                "name",
                "phone",
                "role_ids",
                "username"
            ],
            "properties": {
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "email": {
                    "type": "string",
                    "example": "aloha@email.com"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "phone": {
                    "type": "string",
                    "example": "0973123456"
                },
                "role_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "671db9eca1f1b1bdbf3d4617"
                    ]
                },
                "username": {
                    "type": "string",
                    "example": "aloha"
                }
            }
        },
        "db.UserCmsDto": {
            "type": "object",
            "properties": {
                "data_status": {
                    "$ref": "#/definitions/enum.DataStatus"
                },
                "email": {
                    "type": "string",
                    "example": "aloha@email.com"
                },
                "name": {
                    "type": "string",
                    "example": "Aloha"
                },
                "phone": {
                    "type": "string",
                    "example": "0973123456"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "671db9eca1f1b1bdbf3d4617"
                    ]
                },
                "updated_at": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "editor"
                },
                "user_id": {
                    "type": "string",
                    "example": "671db9eca1f1b1bdbf3d4618"
                },
                "username": {
                    "type": "string",
                    "example": "aloha"
                }
            }
        },
        "ecode.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "error_description": {
                    "type": "string"
                }
            }
        },
        "enum.DataAction": {
            "type": "string",
            "enum": [
                "create",
                "update",
                "delete",
                "reset_password"
            ],
            "x-enum-varnames": [
                "DataActionCreate",
                "DataActionUpdate",
                "DataActionDelete",
                "DataActionResetPassword"
            ]
        },
        "enum.DataStatus": {
            "type": "string",
            "enum": [
                "enable",
                "disable"
            ],
            "x-enum-varnames": [
                "DataStatusEnable",
                "DataStatusDisable"
            ]
        },
        "enum.Exchange": {
            "type": "string",
            "enum": [
                "binance",
                "bitget",
                "bybit",
                "cex",
                "gate",
                "mexc",
                "probit"
            ],
            "x-enum-varnames": [
                "ExchangeBinance",
                "ExchangeBitget",
                "ExchangeBybit",
                "ExchangeCex",
                "ExchangeGate",
                "ExchangeMexc",
                "ExchangeProbit"
            ]
        },
        "enum.MarginMode": {
            "type": "string",
            "enum": [
                "cross",
                "isolated"
            ],
            "x-enum-varnames": [
                "MarginModeCross",
                "MarginModeIsolated"
            ]
        },
        "enum.MarketType": {
            "type": "string",
            "enum": [
                "spot",
                "margin"
            ],
            "x-enum-varnames": [
                "MarketTypeSpot",
                "MarketTypeMargin"
            ]
        },
        "enum.OrderStatus": {
            "type": "string",
            "enum": [
                "open",
                "closed"
            ],
            "x-enum-varnames": [
                "OrderStatusOpen",
                "OrderStatusClosed"
            ]
        },
        "enum.Permission": {
            "type": "string",
            "enum": [
                "system_setting",
                "system_audit_log",
                "client_view",
                "client_create",
                "client_delete",
                "role_view",
                "role_create",
                "role_update",
                "user_view",
                "user_create",
                "user_update",
                "tenant_view",
                "tenant_create",
                "tenant_update",
                "coin_view",
                "coin_create",
                "coin_update",
                "strategy_view",
                "strategy_create",
                "strategy_update",
                "trader_view",
                "trader_create",
                "trader_update"
            ],
            "x-enum-varnames": [
                "PermissionSystemSetting",
                "PermissionSystemAuditLog",
                "PermissionClientView",
                "PermissionClientCreate",
                "PermissionClientDelete",
                "PermissionRoleView",
                "PermissionRoleCreate",
                "PermissionRoleUpdate",
                "PermissionUserView",
                "PermissionUserCreate",
                "PermissionUserUpdate",
                "PermissionTenantView",
                "PermissionTenantCreate",
                "PermissionTenantUpdate",
                "PermissionCoinView",
                "PermissionCoinCreate",
                "PermissionCoinUpdate",
                "PermissionStrategyView",
                "PermissionStrategyCreate",
                "PermissionStrategyUpdate",
                "PermissionTraderView",
                "PermissionTraderCreate",
                "PermissionTraderUpdate"
            ]
        },
        "enum.ServerStatus": {
            "type": "string",
            "enum": [
                "on",
                "off"
            ],
            "x-enum-varnames": [
                "ServerStatusOn",
                "ServerStatusOff"
            ]
        },
        "tz.Timezone": {
            "type": "string",
            "enum": [
                "UTC",
                "Local",
                "Asia/Ho_Chi_Minh"
            ],
            "x-enum-varnames": [
                "UTC",
                "Local",
                "AsiaHoChiMinh"
            ]
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "Header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Document APIs",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
